name: Build Kernel

on:
  workflow_dispatch:
    inputs:
      device:
          description: 'device codename (e.g ysl)'
          required: true
      repo:
          description: 'Kernel source link (dont include . git at the end)'
          required: true
      branch:
          description: 'Kernel source branch'
          required: true
      
env:
  TZ: Asia/Jakarta
  DEVICE: ${{ github.event.inputs.device }}
  REPO: ${{ github.event.inputs.repo }}
  BRANCH: ${{ github.event.inputs.branch }}
  GKI: ${{ github.event.inputs.gki }}
  token: ${{ secrets.TELEGRAM_TOKEN }}
  chat_id: ${{ secrets.TELEGRAM_TO }}

jobs:
  kernel-build:
    runs-on: ubuntu-22.04

    steps:
      - name: Initializing environment
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
          df -h
          ld --version
          gcc -v
          ar --version
          sudo apt update
          sudo apt update -y && sudo apt upgrade -y && sudo apt install nano bc bison ca-certificates curl flex gcc git libc6-dev libssl-dev openssl python-is-python3 ssh wget zip zstd sudo make clang gcc-arm-linux-gnueabi software-properties-common build-essential libarchive-tools gcc-aarch64-linux-gnu -y && sudo apt install build-essential -y && sudo apt install libssl-dev libffi-dev libncurses5-dev zlib1g zlib1g-dev libreadline-dev libbz2-dev libsqlite3-dev make gcc -y && sudo apt install pigz -y && sudo apt install python2 -y && sudo apt install python3 -y && sudo apt install cpio -y && sudo apt install lld -y && sudo apt install llvm -y

      - name: Compiling
        run: |
          if [ "${DEVICE}" = "ysl" ]; then
            wget https://raw.githubusercontent.com/ALprjkt/KernelCI/main/scripts/ysl_build_script.sh
            bash ysl_build_script.sh
            echo "Device not supported yet"
          fi
